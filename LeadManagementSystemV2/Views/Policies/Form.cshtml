@model LeadManagementSystemV2.Models.PolicyModel
@using LeadManagementSystemV2.Models;
@using LeadManagementSystemV2.Helpers;
@section LinkStyleSection{

    @Styles.Render("~/assets/cache/select2style")
    @Styles.Render("~/assets/cache/datepickerstyle")
}
@section LinkScriptSection{

    @Scripts.Render("~/assets/cache/select2script")
    @Scripts.Render("~/assets/cache/datepickerscript")
}
@section InLineScriptSection{

    <script>
        $("#file").change(function () {
            var fileExtension = ['pdf'];
            if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only formats are allowed : " + fileExtension.join(', '));
                $(this).val('');
                return false;
            }
        });
    @if (ViewBag.PageType == "View")
    {
       @:DisableView();
    }

       

    </script>
}
@{Html.RenderPartial("BreadCrumb");}
<!--Page content-->
<!--===================================================-->
<div id="page-content">
    <div class="panel">
        <!--Block Styled Form -->
        <!--===================================================-->
        @using (Ajax.BeginForm("Save", "policies", null, new AjaxOptions { HttpMethod = "POST", OnBegin = "OnFormBegin", OnComplete = "OnFormComplete", OnSuccess = "OnFormSuccess", OnFailure = "OnFormFailure"},new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ID)
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Title <span class="text-danger">*</span></label>
                        @Html.TextBoxFor(m => m.Title, null, new { @class = "form-control", @placeholder = "Title *" })
                        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Category <span class="text-danger">*</span></label>
                        @*@Html.DropDownListFor(m => m.Category, new List<SelectListItem>
         {
           new SelectListItem{ Text=ApplicationHelper.EnumPolicyCategory.Corporate, Value = ApplicationHelper.EnumPolicyCategory.Corporate},
           new SelectListItem{ Text=ApplicationHelper.EnumPolicyCategory.Exclusive, Value = ApplicationHelper.EnumPolicyCategory.Exclusive },
           new SelectListItem{ Text=ApplicationHelper.EnumPolicyCategory.Premium, Value = ApplicationHelper.EnumPolicyCategory.Premium },
        }, "Please-Select", new { @class = "form-control select-picker" })*@
                        @Html.TextBoxFor(m => m.Category, null, new { @class = "form-control", @placeholder = "Exclusive, premium, etc" })
                        @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Type <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                        {
                          new SelectListItem{ Text=ApplicationHelper.EnumPolicyType.Engineering, Value = ApplicationHelper.EnumPolicyType.Engineering},
                          new SelectListItem{ Text=ApplicationHelper.EnumPolicyType.Power, Value = ApplicationHelper.EnumPolicyType.Power },
                          new SelectListItem{ Text=ApplicationHelper.EnumPolicyType.Chemical, Value = ApplicationHelper.EnumPolicyType.Chemical },
                          new SelectListItem{ Text=ApplicationHelper.EnumPolicyType.Inspect, Value = ApplicationHelper.EnumPolicyType.Inspect },
                          new SelectListItem{ Text=ApplicationHelper.EnumPolicyType.DTI, Value = ApplicationHelper.EnumPolicyType.DTI },
                       }, "Please-Select", new { @class = "form-control select-picker" })
                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Upload PDF <span class="text-danger">*</span></label>
                        <input type="file" name="file" id="file" />
                        @Html.ValidationMessageFor(m => m.PDF, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Status <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.Status, new List<SelectListItem>
                          {
                            new SelectListItem{ Text="Enable", Value = "Enable",Selected=true },
                            new SelectListItem{ Text="Disable", Value = "Disable" }
                         }, "Please-Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
            <div class="panel-footer text-right">
                <a class="btn btn-info" href="@ViewBag.PageURL" tabindex="8">Back</a>
                <button class="btn btn-success" type="submit" tabindex="9">Save</button>
            </div>
        }
        <!--===================================================-->
        <!--End Block Styled Form -->
    </div>
</div>
<!--===================================================-->
<!--End page content-->
